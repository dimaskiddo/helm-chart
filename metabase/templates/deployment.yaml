{{- if eq .Values.STATUS "present" }}
  {{- if .Values.SERVICE }}
    {{- if eq .Values.OPENSHIFT true }}
apiVersion: apps.openshift.io/v1
kind: DeploymentConfig
    {{- else }}
apiVersion: apps/v1
kind: Deployment
    {{- end }}
metadata:
  name: {{ .Values.SERVICE.NAME }}
  namespace: {{ .Values.NAMESPACE }}
  labels:
    app: {{ .Values.SERVICE.NAME }}
    chart: "{{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}"
spec:
  strategy:
    type: Recreate
  replicas: 1
  selector:
    matchLabels:
      app: {{ .Values.SERVICE.NAME }}
  template:
    metadata:
      labels:
        app: {{ .Values.SERVICE.NAME }}
        date: "{{ now | unixEpoch }}"
    spec:
      containers:
      - name: {{ .Values.SERVICE.NAME }}
        image: {{ .Values.SERVICE.IMAGE.NAME }}
        imagePullPolicy: Always
        ports:
        - containerPort: 3000
          protocol: TCP
        {{- if .Values.SERVICE.ENV }}
        envFrom:
        - secretRef:
            name: {{ .Values.SERVICE.NAME }}-env
        {{- end }}
        {{- if .Values.SERVICE.RESOURCES }}
        resources:
          requests:
          {{- if .Values.SERVICE.RESOURCES.REQUESTS }}
            {{- if .Values.SERVICE.RESOURCES.REQUESTS.CPU }}
            cpu: {{ .Values.SERVICE.RESOURCES.REQUESTS.CPU }}
            {{- end }}
            {{- if .Values.SERVICE.RESOURCES.REQUESTS.MEMORY }}
            memory: {{ .Values.SERVICE.RESOURCES.REQUESTS.MEMORY }}
            {{- end }}
          {{- else }}
            {{- if .Values.SERVICE.RESOURCES.LIMITS.CPU }}
            cpu: {{ .Values.SERVICE.RESOURCES.LIMITS.CPU }}
            {{- end }}
            {{- if .Values.SERVICE.RESOURCES.LIMITS.MEMORY }}
            memory: {{ .Values.SERVICE.RESOURCES.LIMITS.MEMORY }}
            {{- end }}
          {{- end }}
          {{- if .Values.SERVICE.RESOURCES.LIMITS }}
          limits:
            {{- if .Values.SERVICE.RESOURCES.LIMITS.CPU }}
            cpu: {{ .Values.SERVICE.RESOURCES.LIMITS.CPU }}
            {{- end }}
            {{- if .Values.SERVICE.RESOURCES.LIMITS.MEMORY }}
            memory: {{ .Values.SERVICE.RESOURCES.LIMITS.MEMORY }}
            {{- end }}
          {{- end }}
        {{- end }}
        livenessProbe:
          initialDelaySeconds: 10
          tcpSocket:
            port: 3000
          timeoutSeconds: 1
        readinessProbe:
          initialDelaySeconds: 5
          tcpSocket:
            port: 3000
          timeoutSeconds: 1
        {{- if .Values.SERVICE.STORAGE }}
          {{- if .Values.ENV }}
            {{- if eq .Values.ENV.MB_DB_TYPE "h2" }}
        volumeMounts:
          - name: metabase-data
            mountPath: /opt/metabase/data
            readOnly: false
            {{- end }}
          {{- end }}
        {{- end }}
      dnsPolicy: ClusterFirst
      {{- if .Values.SERVICE.SELECTOR }}
      nodeSelector:
        {{- if .Values.SERVICE.SELECTOR.NODE }}
        node-role.kubernetes.io/worker: "{{ .Values.SERVICE.SELECTOR.NODE }}"
        {{- end }}
      {{- end }}
      restartPolicy: Always
      schedulerName: default-scheduler
      {{- if .Values.SERVICE.STORAGE }}
        {{- if .Values.ENV }}
          {{- if eq .Values.ENV.MB_DB_TYPE "h2" }}
      volumes:
        - name: metabase-data
          persistentVolumeClaim:
            claimName: {{ .Values.SERVICE.NAME }}
          {{- end }}
        {{- end }}
      {{- end }}
    {{- if eq .Values.OPENSHIFT true }}
    triggers:
    - type: ConfigChange
    {{- end }}
  {{- end }}
{{- else }}
# Delete Deployment
{{- end }}
